/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Telas;

import Classes.Produto;
import DAO.Comandos;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author riley
 */
public class TelaEstoque extends javax.swing.JDialog {
    private String[] colunas = {"Codigo", "Produto", "Quantidade", "Valor"};
    private ArrayList<String> nomesProdutos = new ArrayList<>();
    private ArrayList<Produto> itens;  
    private boolean stateChange = true;

    /**
     * Creates new form Dialogo
     */
    public TelaEstoque(java.awt.Frame parent, boolean modal, Comandos comandos) {
        super(parent, modal);
        initComponents();
        
        try {
            itens = comandos.getProduto();
            
            for(Produto produtos : itens){
                nomesProdutos.add(produtos.getNome());
            }
            
            popularComboBox(cbProdutos, nomesProdutos);
            
            popularTabelaProdutos(itens, "");
            
            txtCodigoProduto.setText(null);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro.: " + ex, null, JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        lblCodigoProduto = new javax.swing.JLabel();
        txtCodigoProduto = new javax.swing.JTextField();
        lblProduto = new javax.swing.JLabel();
        cbProdutos = new javax.swing.JComboBox<>();
        scrollTabela = new javax.swing.JScrollPane();
        tableEstoque = new javax.swing.JTable();
        btnBaixarSaldo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        panelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblCodigoProduto.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblCodigoProduto.setText("CÃ³digo do produto.:");

        txtCodigoProduto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoProdutoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoProdutoKeyTyped(evt);
            }
        });

        lblProduto.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblProduto.setText("Produto.:");

        cbProdutos.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        cbProdutos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbProdutosItemStateChanged(evt);
            }
        });

        tableEstoque.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        tableEstoque.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        scrollTabela.setViewportView(tableEstoque);

        btnBaixarSaldo.setText("Baixar saldo de estoque");
        btnBaixarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBaixarSaldoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPrincipalLayout.createSequentialGroup()
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(lblCodigoProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblProduto)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 468, Short.MAX_VALUE)
                        .addComponent(btnBaixarSaldo))
                    .addGroup(panelPrincipalLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(scrollTabela)))
                .addContainerGap())
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoProduto)
                    .addComponent(cbProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProduto)
                    .addComponent(txtCodigoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBaixarSaldo))
                .addGap(18, 18, 18)
                .addComponent(scrollTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 530, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtCodigoProdutoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoProdutoKeyReleased
        String id = txtCodigoProduto.getText();
        Dimension tamanho = cbProdutos.getSize();
        
        if (id != null){
            stateChange = !stateChange;
            ArrayList<String> itensFiltrados = new ArrayList<>();
            
            for (Produto item : itens){
                if (String.valueOf(item.getCodigo()).startsWith(id)){
                    itensFiltrados.add(item.getNome());
                }
            }
            
            popularComboBox(cbProdutos, itensFiltrados);
            cbProdutos.setPreferredSize(tamanho);
            
            try {
                popularTabelaProdutos(itens, id);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro.: " + ex, null, JOptionPane.ERROR_MESSAGE);
            }
        } else {
            stateChange = !stateChange;
            popularComboBox(cbProdutos, nomesProdutos);
            cbProdutos.setSelectedIndex(0);
        }
        stateChange = !stateChange;
    }//GEN-LAST:event_txtCodigoProdutoKeyReleased

    private void cbProdutosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbProdutosItemStateChanged
        String codigo;
        
        if(evt.getStateChange() == ItemEvent.SELECTED && stateChange){           
            codigo = String.valueOf(itens.get(cbProdutos.getSelectedIndex()).getCodigo());
            txtCodigoProduto.setText(codigo);
            try {
                popularTabelaProdutos(itens, codigo);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro.: " + ex, null, JOptionPane.ERROR_MESSAGE);
            }
            
        }
    }//GEN-LAST:event_cbProdutosItemStateChanged

    private void btnBaixarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBaixarSaldoActionPerformed
        SimpleDateFormat formatter = new SimpleDateFormat("yyyyMMdd_HHmm");
        String filename = "SALDO_ESTOQUE_EST_" + formatter.format(new Date()) + ".csv";
        
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setAcceptAllFileFilterUsed(false);
        FileNameExtensionFilter filtro = new FileNameExtensionFilter("Comma Separated Values (.csv)", "csv");
        chooser.addChoosableFileFilter(filtro);
        
        filename = chooser.getCurrentDirectory() + "\\" + filename;
        chooser.setSelectedFile(new File(filename));
        
        if (chooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION){
            if (!chooser.getSelectedFile().isDirectory()){
                filename = chooser.getSelectedFile().getAbsolutePath() + ".csv";
            }
            
            try {
                 exportToCsv(filename);
                JOptionPane.showMessageDialog(null, "RelatÃ³rio exportado para\n" + filename, null, JOptionPane.INFORMATION_MESSAGE);
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Erro.: " + ex, null, JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnBaixarSaldoActionPerformed

    private void txtCodigoProdutoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoProdutoKeyTyped
        char letra = evt.getKeyChar();
        if (((letra < '0') || (letra > '9')) && (letra != KeyEvent.VK_BACK_SPACE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoProdutoKeyTyped

    private void popularComboBox(javax.swing.JComboBox<String> comboBox, ArrayList<String> itens){
        // metodo que popula as comboBoxes com base numa lista
        comboBox.removeAllItems();
        for (String item : itens){
            comboBox.addItem(item);
        }
    }
    
    private void popularTabelaProdutos(ArrayList<Produto> produtos, String codigo) throws SQLException{
        DefaultTableModel tabela = (DefaultTableModel) tableEstoque.getModel();
        tabela.setRowCount(0);
        tabela.setColumnIdentifiers(colunas);
        
        for(Produto produto : produtos){
            if(!codigo.isEmpty()){
                if(String.valueOf(produto.getCodigo()).startsWith(codigo)){
                    tabela.addRow(new Object[]{
                        produto.getCodigo(), 
                        produto.getNome(),
                        produto.getQuantidade(),
                        produto.getValor()
                    });                
                }
            }else{    
                tabela.addRow(new Object[]{
                    produto.getCodigo(),
                    produto.getNome(),
                    produto.getQuantidade(),
                    produto.getValor()
                });
            }
        }
    }
    
    private void exportToCsv(String path) throws IOException {
        DefaultTableModel modelo = getModel();
        
        try (FileWriter csv = new FileWriter(new File(path))){
            csv.write("CODIGO PRODUTO;PRODUTO;QUANTIDADE;VALOR\n");
            
            for (int i = 0; i < modelo.getRowCount(); i++){
                for (int j = 0; j < modelo.getColumnCount(); j++){
                    csv.write(modelo.getValueAt(i, j).toString() + ";");
                }
                csv.write("\n");
            }
        }
    }
    
    private DefaultTableModel getModel(){
        DefaultTableModel modelo = new DefaultTableModel();
        modelo.setColumnIdentifiers(colunas);
        
        for (Produto produto : itens) {
            modelo.addRow(new Object[] {
                produto.getCodigo(),
                produto.getNome(),
                produto.getQuantidade(),
                produto.getValor()
            });
        }
        
        return modelo;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBaixarSaldo;
    private javax.swing.JComboBox<String> cbProdutos;
    private javax.swing.JLabel lblCodigoProduto;
    private javax.swing.JLabel lblProduto;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JScrollPane scrollTabela;
    private javax.swing.JTable tableEstoque;
    private javax.swing.JTextField txtCodigoProduto;
    // End of variables declaration//GEN-END:variables
}
