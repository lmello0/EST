/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Telas;

import java.util.ArrayList;
import Classes.Funcionario;
import Classes.SHA512;
import DAO.Comandos;
import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.security.NoSuchAlgorithmException;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mello
 */
public class TelaVendedor extends javax.swing.JDialog {
    private ArrayList<Funcionario> funcionarios;
    private float[] green = new float[3];
    Comandos comandos;
    
    /**
     * Creates new form TelaVendedor
     */
    public TelaVendedor(java.awt.Frame parent, boolean modal, Comandos comandos) throws SQLException {
        super(parent, modal);
        initComponents();
        
        this.comandos = comandos;
        this.funcionarios = comandos.getFuncionario();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelSenha = new javax.swing.JPanel();
        lblSenha = new javax.swing.JLabel();
        txtSenha = new javax.swing.JPasswordField();
        lblContSenha = new javax.swing.JLabel();
        lblSenhaTam = new javax.swing.JLabel();
        lblSenhaMaiuscula = new javax.swing.JLabel();
        lblSenhaMinuscula = new javax.swing.JLabel();
        lblSenhaNum = new javax.swing.JLabel();
        lblSenhaEspecial = new javax.swing.JLabel();
        panelPesquisa = new javax.swing.JPanel();
        lblCodigoPesquisa = new javax.swing.JLabel();
        txtCodigoPesquisa = new javax.swing.JTextField();
        lblCpfPesquisa = new javax.swing.JLabel();
        txtCpfPesquisa = new javax.swing.JTextField();
        lblMatriculaPesquisa = new javax.swing.JLabel();
        txtMatriculaPesquisa = new javax.swing.JTextField();
        btnPesquisa = new javax.swing.JButton();
        scrollTable = new javax.swing.JScrollPane();
        tablePesquisa = new javax.swing.JTable();
        panelEditar = new javax.swing.JPanel();
        lblCodigoEditar = new javax.swing.JLabel();
        txtCodigoEditar = new javax.swing.JTextField();
        lblNomeEditar = new javax.swing.JLabel();
        txtNomeEditar = new javax.swing.JTextField();
        lblCpfEditar = new javax.swing.JLabel();
        txtCpfEditar = new javax.swing.JTextField();
        lblMatriculaEditar = new javax.swing.JLabel();
        txtMatriculaEditar = new javax.swing.JTextField();
        lblCargoEditar = new javax.swing.JLabel();
        cbCargoEditar = new javax.swing.JComboBox<>();
        btnDeletar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnIncluir = new javax.swing.JButton();

        lblSenha.setText("SENHA.:");

        txtSenha.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        txtSenha.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSenhaKeyReleased(evt);
            }
        });

        lblContSenha.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblContSenha.setText("A senha deve conter:");

        lblSenhaTam.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblSenhaTam.setForeground(new java.awt.Color(255, 0, 0));
        lblSenhaTam.setText("• Entre 8 e 20 dígitos");

        lblSenhaMaiuscula.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblSenhaMaiuscula.setForeground(new java.awt.Color(255, 0, 0));
        lblSenhaMaiuscula.setText("• Uma letra maiúscula");

        lblSenhaMinuscula.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblSenhaMinuscula.setForeground(new java.awt.Color(255, 0, 0));
        lblSenhaMinuscula.setText("• Uma letra minúscula");

        lblSenhaNum.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblSenhaNum.setForeground(new java.awt.Color(255, 0, 0));
        lblSenhaNum.setText("• Um número");

        lblSenhaEspecial.setFont(new java.awt.Font("Ubuntu", 0, 12)); // NOI18N
        lblSenhaEspecial.setForeground(new java.awt.Color(255, 0, 0));
        lblSenhaEspecial.setText("• Um caractere especial");

        javax.swing.GroupLayout panelSenhaLayout = new javax.swing.GroupLayout(panelSenha);
        panelSenha.setLayout(panelSenhaLayout);
        panelSenhaLayout.setHorizontalGroup(
            panelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSenhaLayout.createSequentialGroup()
                .addGroup(panelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelSenhaLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelSenhaLayout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(panelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(lblContSenha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblSenhaTam, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSenhaMaiuscula, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSenhaMinuscula, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSenhaEspecial, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSenhaNum, javax.swing.GroupLayout.Alignment.LEADING))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelSenhaLayout.setVerticalGroup(
            panelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSenhaLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(panelSenhaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSenha)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblContSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSenhaTam)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSenhaMaiuscula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSenhaMinuscula)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSenhaNum)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSenhaEspecial)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelPesquisa.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PESQUISA", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lblCodigoPesquisa.setText("CÓDIGO.:");

        lblCpfPesquisa.setText("CPF.:");

        lblMatriculaPesquisa.setText("MATRÍCULA.:");

        btnPesquisa.setText("Pesquisar");
        btnPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPesquisaLayout = new javax.swing.GroupLayout(panelPesquisa);
        panelPesquisa.setLayout(panelPesquisaLayout);
        panelPesquisaLayout.setHorizontalGroup(
            panelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelPesquisaLayout.createSequentialGroup()
                        .addComponent(lblCodigoPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoPesquisa))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPesquisaLayout.createSequentialGroup()
                        .addComponent(lblCpfPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCpfPesquisa))
                    .addGroup(panelPesquisaLayout.createSequentialGroup()
                        .addComponent(lblMatriculaPesquisa)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMatriculaPesquisa)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPesquisa)
                .addContainerGap())
        );
        panelPesquisaLayout.setVerticalGroup(
            panelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPesquisaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoPesquisa)
                    .addComponent(txtCodigoPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCpfPesquisa)
                    .addComponent(txtCpfPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPesquisaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatriculaPesquisa)
                    .addComponent(txtMatriculaPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisa))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tablePesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CODIGO", "NOME", "CPF", "MATRICULA", "CARGO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePesquisaMouseClicked(evt);
            }
        });
        scrollTable.setViewportView(tablePesquisa);

        panelEditar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "EDITAR", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lblCodigoEditar.setText("CÓDIGO.:");

        txtCodigoEditar.setEditable(false);
        txtCodigoEditar.setPreferredSize(new java.awt.Dimension(86, 22));

        lblNomeEditar.setText("NOME.:");

        lblCpfEditar.setText("CPF.:");

        lblMatriculaEditar.setText("MATRÍCULA.:");

        lblCargoEditar.setText("CARGO.:");

        cbCargoEditar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "VENDEDOR", "GERENTE" }));

        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnIncluir.setText("Incluir");
        btnIncluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIncluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelEditarLayout = new javax.swing.GroupLayout(panelEditar);
        panelEditar.setLayout(panelEditarLayout);
        panelEditarLayout.setHorizontalGroup(
            panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelEditarLayout.createSequentialGroup()
                        .addComponent(lblNomeEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNomeEditar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditarLayout.createSequentialGroup()
                        .addComponent(lblCpfEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCpfEditar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditarLayout.createSequentialGroup()
                        .addComponent(lblMatriculaEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMatriculaEditar, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))
                    .addGroup(panelEditarLayout.createSequentialGroup()
                        .addComponent(lblCodigoEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelEditarLayout.createSequentialGroup()
                        .addComponent(lblCargoEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbCargoEditar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelEditarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnIncluir)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDeletar)))
                .addContainerGap())
        );
        panelEditarLayout.setVerticalGroup(
            panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelEditarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoEditar)
                    .addComponent(txtCodigoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeEditar)
                    .addComponent(txtNomeEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCpfEditar)
                    .addComponent(txtCpfEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMatriculaEditar)
                    .addComponent(txtMatriculaEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCargoEditar)
                    .addComponent(cbCargoEditar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelEditarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeletar)
                    .addComponent(btnAtualizar)
                    .addComponent(btnIncluir))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelPesquisa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollTable)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTable)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelEditar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisaActionPerformed
        String codigo = txtCodigoPesquisa.getText();
        String cpf = txtCpfPesquisa.getText();
        String matricula = txtMatriculaPesquisa.getText().toUpperCase();
        
        pesquisarFuncionarios(codigo, cpf, matricula);
    }//GEN-LAST:event_btnPesquisaActionPerformed

    private void tablePesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePesquisaMouseClicked
        int row = tablePesquisa.rowAtPoint(evt.getPoint());
        
        String codigo = tablePesquisa.getValueAt(row, 0).toString();
        String nome = tablePesquisa.getValueAt(row, 1).toString();
        String cpf = tablePesquisa.getValueAt(row, 2).toString();
        String matricula = tablePesquisa.getValueAt(row, 3).toString();
        String cargo = tablePesquisa.getValueAt(row, 4).toString();
        
        txtCodigoEditar.setText(codigo);
        txtNomeEditar.setText(nome);
        txtCpfEditar.setText(cpf);
        txtMatriculaEditar.setText(matricula);
        cbCargoEditar.setSelectedItem(cargo);
    }//GEN-LAST:event_tablePesquisaMouseClicked

    private void btnIncluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIncluirActionPerformed
        cadastrarFuncionario();
    }//GEN-LAST:event_btnIncluirActionPerformed

    private void txtSenhaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSenhaKeyReleased
        String senha = String.valueOf(txtSenha.getPassword());
        Color.RGBtoHSB(25, 99, 40, green);

        if (senha.length() >= 8 && senha.length() <= 20) {
            lblSenhaTam.setForeground(Color.getHSBColor(green[0], green[1], green[2]));
        } else {
            lblSenhaTam.setForeground(Color.red);
        }

        if (senha.matches("^(?=.*[A-Z]).{1,}")) {
            lblSenhaMaiuscula.setForeground(Color.getHSBColor(green[0], green[1], green[2]));
        } else {
            lblSenhaMaiuscula.setForeground(Color.red);
        }

        if (senha.matches("^(?=.*[a-z]).{1,}")) {
            lblSenhaMinuscula.setForeground(Color.getHSBColor(green[0], green[1], green[2]));
        } else {
            lblSenhaMinuscula.setForeground(Color.red);
        }

        if (senha.matches("^(?=.*[0-9]).{1,}")) {
            lblSenhaNum.setForeground(Color.getHSBColor(green[0], green[1], green[2]));
        } else {
            lblSenhaNum.setForeground(Color.red);
        }

        if (senha.matches("^(?=.*[!@#$%^&*()]).{1,}")) {
            lblSenhaEspecial.setForeground(Color.getHSBColor(green[0], green[1], green[2]));
        } else {
            lblSenhaEspecial.setForeground(Color.red);
        }
    }//GEN-LAST:event_txtSenhaKeyReleased

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        atualizarFuncionario();
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        deletarFuncionario();
    }//GEN-LAST:event_btnDeletarActionPerformed

    private void atualizarFuncionario(){
        int codigo = Integer.parseInt(txtCodigoEditar.getText());
        String nome = txtNomeEditar.getText().toUpperCase();
        String cpf = txtCpfEditar.getText();
        String matricula = txtMatriculaEditar.getText();
        String cargo = cbCargoEditar.getSelectedItem().toString();
        
        boolean nomeValido = validaNome(nome), cpfValido = validaCpf(cpf);
        
        
        if (nomeValido && cpfValido) {
            Funcionario funcionario = new Funcionario(codigo, nome, cpf, cargo, matricula, cargo);
            
            try {
                comandos.updateFuncionario(funcionario);
                JOptionPane.showMessageDialog(null, "Funcionario " + funcionario.getNome() + " atualizado", null, JOptionPane.INFORMATION_MESSAGE);
                
                funcionarios = comandos.getFuncionario();
                btnPesquisa.doClick();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro.: " + ex, null, JOptionPane.ERROR_MESSAGE);
            }
        }
    }
    
    private void deletarFuncionario(){
        int codigo = Integer.parseInt(txtCodigoEditar.getText());
        String nome = txtNomeEditar.getText().toUpperCase();
        
        Funcionario funcionario = new Funcionario(codigo, nome, "", "", "", "");
        
        try {
            comandos.deleteFuncionario(funcionario);
            JOptionPane.showMessageDialog(null, "Cliente " + funcionario.getNome() + " deletado", null, JOptionPane.INFORMATION_MESSAGE);
            
            funcionarios = comandos.getFuncionario();
            btnPesquisa.doClick();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro.: " + ex, null, JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private void cadastrarFuncionario(){
        String nome = txtNomeEditar.getText().toUpperCase();
        String cpf = txtNomeEditar.getText();
        String cargo = String.valueOf(cbCargoEditar.getSelectedItem()).toUpperCase();
        
        int joptSenha = JOptionPane.showConfirmDialog(null, panelSenha, "SENHA", JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        String senha = "";
        
        if (joptSenha == JOptionPane.OK_OPTION){
            senha = new String(txtSenha.getPassword());
        }
        
        boolean nomeValido, senhaValida, cpfValido;
        
        nomeValido = validaNome(nome);
        cpfValido = validaCpf(cpf);
        senhaValida = validaSenha(senha);
        
        SHA512 hash = new SHA512();
        try {
            senha = hash.toHexStr(hash.obtainSHA(senha));
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(this.getName()).log(Level.SEVERE, null, ex);
        }
        
        if (nomeValido && senhaValida && cpfValido) {
            Funcionario funcionario = new Funcionario(nome, cpf, cargo, null, senha);
            
            try {
                comandos.insertFuncionario(funcionario);
            } catch (SQLException ex) {
                if (ex.getErrorCode() == 20000) {
                    JOptionPane.showConfirmDialog(null, "FUNCIONÁRIO JÁ CADASTRADO!", null, JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showConfirmDialog(null, ex.getMessage(), null, JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
                }
            }
        }
        
        
    }
    
    private void limpar(){
        txtNomeEditar.setText(null);
        txtCpfEditar.setText(null);
        cbCargoEditar.setSelectedIndex(0);
    }
    
    private boolean validaNome(String nome) {
        if (nome.isEmpty()) {
            JOptionPane.showConfirmDialog(null, "O nome não pode ser nulo!", null, JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (!nome.matches("^(?![\\s.]+$)[a-zA-Z\\s.]*$")){
            JOptionPane.showConfirmDialog(null, "Nome inválido.\nColoque o nome sem acentos e sem números", null, JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }
    
    private boolean validaSenha(String senha) {
        if (!senha.matches("^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[!@#$%&*()]).{8,20}")) {
            JOptionPane.showConfirmDialog(null, "A senha não atende aos requisitos!", null, JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }

    private boolean validaCpf(String cpf) {
        if (cpf.isEmpty()){
            JOptionPane.showConfirmDialog(null, "O CPF não pode ser nulo!", null, JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            return false;
        } else if (!cpf.matches("([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})")){
            JOptionPane.showConfirmDialog(null, "O CPF não tem um formato válido!", null, JOptionPane.DEFAULT_OPTION, JOptionPane.ERROR_MESSAGE);
            return false;
        }
        
        return true;
    }
    
    private void pesquisarFuncionarios(String codigo, String cpf, String matricula){
        DefaultTableModel modelo = (DefaultTableModel) tablePesquisa.getModel();
        modelo.setRowCount(0);
        
        for (Funcionario funcionario : funcionarios){
            String codigoAux = String.valueOf(funcionario.getCodigo());
            String cpfAux = String.valueOf(funcionario.getCpf());
            String matriculaAux = String.valueOf(funcionario.getMatricula());
            
            if (!codigo.equals("")) {
                if (codigoAux.startsWith(codigo)) modelo.addRow(new Object[]{funcionario.getCodigo(), funcionario.getNome(), funcionario.getCpf(), funcionario.getMatricula(), funcionario.getCargo()});
            } else if (!cpf.equals("")) {
                if (cpfAux.startsWith(cpf)) modelo.addRow(new Object[]{funcionario.getCodigo(), funcionario.getNome(), funcionario.getCpf(), funcionario.getMatricula(), funcionario.getCargo()});
            } else if (!matricula.equals("")) {
                if (matriculaAux.startsWith(matricula)) modelo.addRow(new Object[]{funcionario.getCodigo(), funcionario.getNome(), funcionario.getCpf(), funcionario.getMatricula(), funcionario.getCargo()});
            } else {
                modelo.addRow(new Object[]{funcionario.getCodigo(), funcionario.getNome(), funcionario.getCpf(), funcionario.getMatricula(), funcionario.getCargo()});
            }
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVendedor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    TelaVendedor dialog = new TelaVendedor(new javax.swing.JFrame(), true, new Comandos());
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaVendedor.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(TelaVendedor.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnIncluir;
    private javax.swing.JButton btnPesquisa;
    private javax.swing.JComboBox<String> cbCargoEditar;
    private javax.swing.JLabel lblCargoEditar;
    private javax.swing.JLabel lblCodigoEditar;
    private javax.swing.JLabel lblCodigoPesquisa;
    private javax.swing.JLabel lblContSenha;
    private javax.swing.JLabel lblCpfEditar;
    private javax.swing.JLabel lblCpfPesquisa;
    private javax.swing.JLabel lblMatriculaEditar;
    private javax.swing.JLabel lblMatriculaPesquisa;
    private javax.swing.JLabel lblNomeEditar;
    private javax.swing.JLabel lblSenha;
    private javax.swing.JLabel lblSenhaEspecial;
    private javax.swing.JLabel lblSenhaMaiuscula;
    private javax.swing.JLabel lblSenhaMinuscula;
    private javax.swing.JLabel lblSenhaNum;
    private javax.swing.JLabel lblSenhaTam;
    private javax.swing.JPanel panelEditar;
    private javax.swing.JPanel panelPesquisa;
    private javax.swing.JPanel panelSenha;
    private javax.swing.JScrollPane scrollTable;
    private javax.swing.JTable tablePesquisa;
    private javax.swing.JTextField txtCodigoEditar;
    private javax.swing.JTextField txtCodigoPesquisa;
    private javax.swing.JTextField txtCpfEditar;
    private javax.swing.JTextField txtCpfPesquisa;
    private javax.swing.JTextField txtMatriculaEditar;
    private javax.swing.JTextField txtMatriculaPesquisa;
    private javax.swing.JTextField txtNomeEditar;
    private javax.swing.JPasswordField txtSenha;
    // End of variables declaration//GEN-END:variables
}

