/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package Telas;

import Classes.*;
import DAO.Comandos;
import java.awt.Dimension;
import java.awt.event.ItemEvent;
import java.awt.event.KeyEvent;
import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author mello
 */
public class TelaPedido extends javax.swing.JDialog {
    private double totalPedido = 0.0;
    private final Comandos comandos;
    private final Funcionario funcionario;
    
    private final ArrayList<Cliente> clientes;
    private ArrayList<Produto> produtos;
    private ArrayList<Funcionario> funcionarios;
    
    private ArrayList<String> clientesNome = new ArrayList<>();
    private ArrayList<String> produtosNome = new ArrayList<>();
    private ArrayList<String> funcionariosNome = new ArrayList<>();
    
    private Pedido pedido;
    private boolean stateChange = true;
    private boolean pedidoJaExistente = false;
    /**
     * Creates new form TelaPedido
     * @param parent
     * @param modal
     * @param comandos
     * @param funcionario
     * @throws java.sql.SQLException
     */
    public TelaPedido(java.awt.Frame parent, boolean modal, Comandos comandos, Funcionario funcionario) throws SQLException {
        super(parent, modal);
        initComponents();
        
        this.comandos = comandos;
        this.funcionario = funcionario;
        
        clientes = comandos.getCliente();
        produtos = comandos.getProduto();
        funcionarios = comandos.getFuncionario();
        
        for (Cliente cliente : clientes) {
            clientesNome.add(cliente.getNome());
        }
        
        for (Produto produto : produtos) {
            produtosNome.add(produto.getNome());
        }
        
        for (Funcionario vendedor : funcionarios) {
            funcionariosNome.add(vendedor.getNome());
        }
        
        popularComboBox(clientesNome, cbClienteAdd);
        popularComboBox(produtosNome, cbProdutoAdd);
        popularComboBox(funcionariosNome, cbVendedorAdd);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelAdicionarProduto = new javax.swing.JPanel();
        lblCodigoAdd = new javax.swing.JLabel();
        txtCodigoAdd = new javax.swing.JTextField();
        lblClienteAdd = new javax.swing.JLabel();
        cbClienteAdd = new javax.swing.JComboBox<>();
        lblProdutoAdd = new javax.swing.JLabel();
        cbProdutoAdd = new javax.swing.JComboBox<>();
        lblVendedorAdd = new javax.swing.JLabel();
        cbVendedorAdd = new javax.swing.JComboBox<>();
        lblQuantidadeAdd = new javax.swing.JLabel();
        spinQuantidadeAdd = new javax.swing.JSpinner();
        lblValorAdd = new javax.swing.JLabel();
        txtValorAdd = new javax.swing.JTextField();
        lblItensEstoqueAdd = new javax.swing.JLabel();
        txtItensEstoqueAdd = new javax.swing.JTextField();
        btnAdicionarAdd = new javax.swing.JButton();
        btnAbrirPedidoAdd = new javax.swing.JButton();
        panelPesquisar = new javax.swing.JPanel();
        lblCodigoPesquisar = new javax.swing.JLabel();
        txtCodigoPesquisar = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        panelTabela = new javax.swing.JPanel();
        scrollTabela = new javax.swing.JScrollPane();
        tablePesquisa = new javax.swing.JTable();
        btnFecharPedido = new javax.swing.JButton();
        btnRemoverItem = new javax.swing.JButton();
        btnLimparPedido = new javax.swing.JButton();
        lblTotal = new javax.swing.JLabel();
        lblTotalDouble = new javax.swing.JLabel();
        btnAtualizarPedido = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1500, 720));
        setPreferredSize(new java.awt.Dimension(1500, 720));

        panelAdicionarProduto.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "ADICIONAR PRODUTO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lblCodigoAdd.setText("CÃ“DIGO.:");

        txtCodigoAdd.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoAddKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoAddKeyTyped(evt);
            }
        });

        lblClienteAdd.setText("CLIENTE.:");

        lblProdutoAdd.setText("PRODUTO.:");

        cbProdutoAdd.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbProdutoAddItemStateChanged(evt);
            }
        });

        lblVendedorAdd.setText("VENDEDOR.:");

        lblQuantidadeAdd.setText("QUANTIDADE.:");

        spinQuantidadeAdd.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));

        lblValorAdd.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblValorAdd.setText("VALOR.:");

        txtValorAdd.setEditable(false);

        lblItensEstoqueAdd.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        lblItensEstoqueAdd.setText("ITENS EM ESTOQUE.:");

        txtItensEstoqueAdd.setEditable(false);

        btnAdicionarAdd.setText("Adicionar");
        btnAdicionarAdd.setEnabled(false);
        btnAdicionarAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarAddActionPerformed(evt);
            }
        });

        btnAbrirPedidoAdd.setText("Abrir pedido");
        btnAbrirPedidoAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAbrirPedidoAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAdicionarProdutoLayout = new javax.swing.GroupLayout(panelAdicionarProduto);
        panelAdicionarProduto.setLayout(panelAdicionarProdutoLayout);
        panelAdicionarProdutoLayout.setHorizontalGroup(
            panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdicionarProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelAdicionarProdutoLayout.createSequentialGroup()
                        .addComponent(lblCodigoAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelAdicionarProdutoLayout.createSequentialGroup()
                        .addComponent(lblClienteAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cbClienteAdd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblProdutoAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblVendedorAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbProdutoAdd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbVendedorAdd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblQuantidadeAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblValorAdd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAdicionarProdutoLayout.createSequentialGroup()
                        .addComponent(spinQuantidadeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblItensEstoqueAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtItensEstoqueAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtValorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelAdicionarProdutoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAbrirPedidoAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnAdicionarAdd)
                .addContainerGap())
        );
        panelAdicionarProdutoLayout.setVerticalGroup(
            panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdicionarProdutoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoAdd)
                    .addComponent(txtCodigoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProdutoAdd)
                    .addComponent(cbProdutoAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQuantidadeAdd)
                    .addComponent(spinQuantidadeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblItensEstoqueAdd)
                    .addComponent(txtItensEstoqueAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblClienteAdd)
                    .addComponent(cbClienteAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblVendedorAdd)
                    .addComponent(cbVendedorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblValorAdd)
                    .addComponent(txtValorAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addGroup(panelAdicionarProdutoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdicionarAdd)
                    .addComponent(btnAbrirPedidoAdd))
                .addContainerGap())
        );

        panelPesquisar.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "PESQUISAR PEDIDO", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP));

        lblCodigoPesquisar.setText("CODIGO.:");

        txtCodigoPesquisar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoPesquisarKeyPressed(evt);
            }
        });

        btnPesquisar.setText("Pesquisar");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPesquisarLayout = new javax.swing.GroupLayout(panelPesquisar);
        panelPesquisar.setLayout(panelPesquisarLayout);
        panelPesquisarLayout.setHorizontalGroup(
            panelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPesquisarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPesquisarLayout.createSequentialGroup()
                        .addComponent(lblCodigoPesquisar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPesquisarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnPesquisar)))
                .addContainerGap())
        );
        panelPesquisarLayout.setVerticalGroup(
            panelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPesquisarLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelPesquisarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCodigoPesquisar)
                    .addComponent(txtCodigoPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnPesquisar)
                .addContainerGap())
        );

        panelTabela.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tablePesquisa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÃ“DIGO", "PRODUTO", "QUANTIDADE", "CLIENTE", "VENDEDOR", "VALOR UNITARIO", "VALOR TOTAL"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        scrollTabela.setViewportView(tablePesquisa);

        btnFecharPedido.setText("Fechar pedido");
        btnFecharPedido.setEnabled(false);
        btnFecharPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFecharPedidoActionPerformed(evt);
            }
        });

        btnRemoverItem.setText("Remover Item");
        btnRemoverItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverItemActionPerformed(evt);
            }
        });

        btnLimparPedido.setText("Limpar pedido");
        btnLimparPedido.setEnabled(false);
        btnLimparPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparPedidoActionPerformed(evt);
            }
        });

        lblTotal.setText("Total.:");

        lblTotalDouble.setText("R$ " + totalPedido);

        btnAtualizarPedido.setText("Atualizar pedido");
        btnAtualizarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarPedidoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTabelaLayout = new javax.swing.GroupLayout(panelTabela);
        panelTabela.setLayout(panelTabelaLayout);
        panelTabelaLayout.setHorizontalGroup(
            panelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollTabela)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelTabelaLayout.createSequentialGroup()
                        .addComponent(lblTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblTotalDouble, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(116, 116, 116)
                        .addComponent(btnRemoverItem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAtualizarPedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparPedido)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnFecharPedido)))
                .addContainerGap())
        );
        panelTabelaLayout.setVerticalGroup(
            panelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTabelaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(scrollTabela, javax.swing.GroupLayout.DEFAULT_SIZE, 462, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelTabelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnFecharPedido)
                    .addComponent(btnRemoverItem)
                    .addComponent(btnLimparPedido)
                    .addComponent(lblTotal)
                    .addComponent(lblTotalDouble)
                    .addComponent(btnAtualizarPedido))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(panelPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(panelAdicionarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(panelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(panelAdicionarProduto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelPesquisar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelTabela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        if (!txtCodigoPesquisar.getText().isBlank()) {
            int codPedido = Integer.parseInt(txtCodigoPesquisar.getText());
            
            try {
                pesquisarPedido(codPedido);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro.: " + ex, "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "O codigo de pesquisa nÃ£o pode ser nulo!", "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        
        btnAdicionarAdd.setEnabled(true);
    }//GEN-LAST:event_btnPesquisarActionPerformed

    private void txtCodigoPesquisarKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoPesquisarKeyPressed
        char letra = evt.getKeyChar();
        if (((letra < '0') || (letra > '9')) && (letra != KeyEvent.VK_BACK_SPACE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoPesquisarKeyPressed

    private void btnAtualizarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarPedidoActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) tablePesquisa.getModel();
        String nomeProduto;
        int quantidade;
        
        for (Vector item : modelo.getDataVector()) {
            nomeProduto = item.get(1).toString();
            quantidade = Integer.parseInt(item.get(2).toString());
            
            for (Produto produto : pedido.getProdutos()) {
                if (produto.getNome().equals(nomeProduto)) {
                    produto.setQuantidade(quantidade);
                }
            }
        }
        
        try {
            comandos.updatePedido(pedido);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro.: " + ex, "ERRO", JOptionPane.ERROR_MESSAGE);
        }
        
        popularTabela();
    }//GEN-LAST:event_btnAtualizarPedidoActionPerformed

    private void btnRemoverItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverItemActionPerformed
        if (tablePesquisa.getSelectedRowCount() == 1)
            if (tablePesquisa.getRowCount() -1 > 0){
                removeItemPedido();
            } else if (pedidoJaExistente) {
                JOptionPane.showMessageDialog(null, "NÃ£o Ã© possÃ­vel deixar o pedido sem itens!", "Aviso", JOptionPane.WARNING_MESSAGE);
            } else {
                removeItemPedido();
                
                cbClienteAdd.setEnabled(true);
                cbVendedorAdd.setEnabled(stateChange);
                btnPesquisar.setEnabled(true);
                btnAbrirPedidoAdd.setEnabled(true);
                btnLimparPedido.setEnabled(false);
                btnFecharPedido.setEnabled(false);
            }
        else {
            JOptionPane.showMessageDialog(null, "Selecione 1 item para remover!", "Aviso", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnRemoverItemActionPerformed

    private void btnAdicionarAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarAddActionPerformed
        String codProduto = txtCodigoAdd.getText();
        String nomeProduto = cbProdutoAdd.getSelectedItem().toString();
        int quantidade = Integer.parseInt(spinQuantidadeAdd.getValue().toString());
        String nomeCliente = cbClienteAdd.getSelectedItem().toString();
        String nomeVendedor = cbVendedorAdd.getSelectedItem().toString();
        double valorUnit = Double.parseDouble(txtValorAdd.getText().substring(2).strip());
        double valorTot = valorUnit * quantidade;
        
        int codCliente = 0;
        int codFuncionario = 0;
        
        for (Cliente cliente : clientes) {
            if (cliente.getNome().equals(nomeCliente)) {
                codCliente = cliente.getCodigo();
            }
        }
        
        for (Funcionario vendedor : funcionarios) {
            if (vendedor.getNome().equals(nomeVendedor)) {
                codFuncionario = vendedor.getCodigo();
            }
        }

        // desabilita a escolha do cliente a partir de um item adicionado
        cbClienteAdd.setEnabled(false);
        cbVendedorAdd.setEnabled(false);
        
        // soma o valor total do pedido
        totalPedido += valorTot;
        lblTotalDouble.setText("R$ " + totalPedido);

        // adiciona o produto ao pedido
        Produto produto = new Produto(Integer.parseInt(codProduto), nomeProduto, quantidade, valorUnit, null);
        pedido.addProduto(produto);
        
        // seta as configuracoes do pedido
        pedido.setValor(totalPedido);
        pedido.setCodCliente(codCliente);
        pedido.setCodVendedor(codFuncionario);
        
        
        popularTabela();
    }//GEN-LAST:event_btnAdicionarAddActionPerformed

    private void btnFecharPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFecharPedidoActionPerformed
        if (tablePesquisa.getRowCount() != 0){
            btnAbrirPedidoAdd.setEnabled(true);
            btnPesquisar.setEnabled(true);
            btnAdicionarAdd.setEnabled(false);
            btnFecharPedido.setEnabled(false);
            btnLimparPedido.setEnabled(false);

            try {
                comandos.insertPedido(pedido);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Erro.: " + ex, "ERRO", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            int decisao = JOptionPane.showConfirmDialog(null, "Tem certeza que quer cancelar o pedido?", "Cancelar pedido", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
            
            System.out.println(decisao);
            
            if (decisao == 0) {
                pedido = new Pedido();
                
                btnAbrirPedidoAdd.setEnabled(true);
                btnPesquisar.setEnabled(true);
                btnAdicionarAdd.setEnabled(false);
                btnFecharPedido.setEnabled(false);
                btnLimparPedido.setEnabled(false);
            }
        }
    }//GEN-LAST:event_btnFecharPedidoActionPerformed

    private void btnAbrirPedidoAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAbrirPedidoAddActionPerformed
        pedido = new Pedido();
        pedido.setNewCodPedido();
        
        btnAbrirPedidoAdd.setEnabled(false);
        btnPesquisar.setEnabled(false);
        btnAdicionarAdd.setEnabled(true);
        btnFecharPedido.setEnabled(true);
        btnLimparPedido.setEnabled(true);
        
        cbVendedorAdd.setEnabled(true);
        cbClienteAdd.setEnabled(true);
        
        popularTabela();
        pedidoJaExistente = false;
    }//GEN-LAST:event_btnAbrirPedidoAddActionPerformed

    private void txtCodigoAddKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoAddKeyTyped
        char letra = evt.getKeyChar();
        if (((letra < '0') || (letra > '9')) && (letra != KeyEvent.VK_BACK_SPACE)){
            evt.consume();
        }
    }//GEN-LAST:event_txtCodigoAddKeyTyped

    private void txtCodigoAddKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoAddKeyReleased
        String codProduto = txtCodigoAdd.getText();
        Dimension tamanho = cbProdutoAdd.getSize();
        
        if (codProduto != null){
            stateChange = !stateChange;
            ArrayList<String> itensFiltrados = new ArrayList<>();

            for (Produto item : produtos){
                if (String.valueOf(item.getCodigo()).startsWith(codProduto)){
                    itensFiltrados.add(item.getNome());
                }
            }
            
            popularComboBox(itensFiltrados, cbProdutoAdd);
            cbProdutoAdd.setPreferredSize(tamanho);
            
            for (Produto produto : produtos){
                if (produto.getNome().equals(cbProdutoAdd.getSelectedItem())){
                    lblValorAdd.setText("R$ " + produto.getValor());
                    txtItensEstoqueAdd.setText(String.valueOf(produto.getQuantidade()-1));
                    break;
                }
            }
            
        } else {
            stateChange = !stateChange;
            popularComboBox(produtosNome, cbProdutoAdd);
            cbProdutoAdd.setSelectedIndex(0);
        }
        stateChange = !stateChange;
    }//GEN-LAST:event_txtCodigoAddKeyReleased

    private void cbProdutoAddItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbProdutoAddItemStateChanged
        if(evt.getStateChange() == ItemEvent.SELECTED && stateChange){
            txtCodigoAdd.setText(String.valueOf(produtos.get(cbProdutoAdd.getSelectedIndex()).getCodigo()));
            txtValorAdd.setText("R$ " + produtos.get(cbProdutoAdd.getSelectedIndex()).getValor());
            txtItensEstoqueAdd.setText(String.valueOf(produtos.get(cbProdutoAdd.getSelectedIndex()).getQuantidade()-1));
        }
    }//GEN-LAST:event_cbProdutoAddItemStateChanged

    private void btnLimparPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparPedidoActionPerformed
       pedido = new Pedido();
       popularTabela();
       
       cbClienteAdd.setEnabled(true);
       cbVendedorAdd.setEnabled(true);
    }//GEN-LAST:event_btnLimparPedidoActionPerformed

    private void pesquisarPedido(int codPedido) throws SQLException{
        pedido = comandos.getPedido(codPedido);
        
        popularTabela();
        
        if (pedido.getCodPedido() != 0) {
            pedidoJaExistente = true;
            cbVendedorAdd.setEnabled(false);
            cbClienteAdd.setEnabled(false);
        }
    }
    
    private void popularTabela(){
        totalPedido = 0;
        String clienteNome = "";
        String funcionarioNome = "";
        
        DefaultTableModel modelo = (DefaultTableModel) tablePesquisa.getModel();
        modelo.setRowCount(0);
        
        for (Cliente cliente : clientes){
            if (cliente.getCodigo() == pedido.getCodCliente()){
                clienteNome = cliente.getNome();
                break;
            }
        }
        
        for (Funcionario vendedor : funcionarios){
            if (vendedor.getCodigo() == pedido.getCodVendedor()){
                funcionarioNome = vendedor.getNome();
                break;
            }
        }
        
        for (Produto produto : pedido.getProdutos()){
            modelo.addRow(new Object[]{
                pedido.getCodPedido(),
                produto.getNome(),
                produto.getQuantidade(),
                clienteNome,
                funcionarioNome,
                produto.getValor(),
                produto.getValor() * produto.getQuantidade()
            });
            
            totalPedido += produto.getValor() * produto.getQuantidade();
        }
        
        lblTotalDouble.setText(String.valueOf(totalPedido));
    }
    
    private void popularComboBox(ArrayList<String> itens, javax.swing.JComboBox comboBox){
        comboBox.removeAllItems();
        for (String item : itens) {
            comboBox.addItem(item);
        }
    }
    
    private void removeItemPedido() {
        int index = tablePesquisa.getSelectedRow();
        String nomeProduto = tablePesquisa.getValueAt(index, 1).toString();
        int codProduto = 0;

        for (Produto produto : pedido.getProdutos()) {
            if (produto.getNome().equals(nomeProduto)) {
                codProduto = produto.getCodigo();
            }
        }

        pedido.getProdutos().remove(index);

        try {
            comandos.deleteProdutoPedido(pedido, codProduto);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Erro.: " + ex, "ERRO", JOptionPane.ERROR_MESSAGE);
        }

        popularTabela();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaPedido.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    Comandos comandos = new Comandos();
                    
                    TelaPedido dialog = new TelaPedido(new javax.swing.JFrame(), true, comandos, new Funcionario("LUCAS MELLO DOS SANTOS", "", "", "", ""));
                    dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        @Override
                        public void windowClosing(java.awt.event.WindowEvent e) {
                            System.exit(0);
                        }
                    });
                    dialog.setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(TelaPedido.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(TelaPedido.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAbrirPedidoAdd;
    private javax.swing.JButton btnAdicionarAdd;
    private javax.swing.JButton btnAtualizarPedido;
    private javax.swing.JButton btnFecharPedido;
    private javax.swing.JButton btnLimparPedido;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnRemoverItem;
    private javax.swing.JComboBox<String> cbClienteAdd;
    private javax.swing.JComboBox<String> cbProdutoAdd;
    private javax.swing.JComboBox<String> cbVendedorAdd;
    private javax.swing.JLabel lblClienteAdd;
    private javax.swing.JLabel lblCodigoAdd;
    private javax.swing.JLabel lblCodigoPesquisar;
    private javax.swing.JLabel lblItensEstoqueAdd;
    private javax.swing.JLabel lblProdutoAdd;
    private javax.swing.JLabel lblQuantidadeAdd;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTotalDouble;
    private javax.swing.JLabel lblValorAdd;
    private javax.swing.JLabel lblVendedorAdd;
    private javax.swing.JPanel panelAdicionarProduto;
    private javax.swing.JPanel panelPesquisar;
    private javax.swing.JPanel panelTabela;
    private javax.swing.JScrollPane scrollTabela;
    private javax.swing.JSpinner spinQuantidadeAdd;
    private javax.swing.JTable tablePesquisa;
    private javax.swing.JTextField txtCodigoAdd;
    private javax.swing.JTextField txtCodigoPesquisar;
    private javax.swing.JTextField txtItensEstoqueAdd;
    private javax.swing.JTextField txtValorAdd;
    // End of variables declaration//GEN-END:variables
}
